name: LLVM

on:
  workflow_call:
    outputs:
      cache-key-aarch64-apple-darwin:
        value: ${{ jobs.llvm.outputs.cache-key-aarch64-apple-darwin }}
      cache-key-x86_64-apple-darwin:
        value: ${{ jobs.llvm.outputs.cache-key-x86_64-apple-darwin }}
      cache-key-aarch64-unknown-linux-gnu:
        value: ${{ jobs.llvm.outputs.cache-key-aarch64-unknown-linux-gnu }}
      cache-key-aarch64-unknown-linux-musl:
        value: ${{ jobs.llvm.outputs.cache-key-aarch64-unknown-linux-musl }}
      cache-key-riscv64gc-unknown-linux-gnu:
        value: ${{ jobs.llvm.outputs.cache-key-riscv64gc-unknown-linux-gnu }}
      cache-key-x86_64-unknown-linux-gnu:
        value: ${{ jobs.llvm.outputs.cache-key-x86_64-unknown-linux-gnu }}
      cache-key-x86_64-unknown-linux-musl:
        value: ${{ jobs.llvm.outputs.cache-key-x86_64-unknown-linux-musl }}

jobs:
  llvm:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-14
            target: aarch64-apple-darwin
          - os: macos-13
            target: x86_64-apple-darwin
          - os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-22.04
            target: aarch64-unknown-linux-musl
          - os: ubuntu-22.04
            target: riscv64gc-unknown-linux-gnu
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-musl
    name: llvm ${{ matrix.target }}
    outputs:
      cache-key-aarch64-apple-darwin: ${{ steps.cache-key.outputs.cache-key-aarch64-apple-darwin }}
      cache-key-x86_64-apple-darwin: ${{ steps.cache-key.outputs.cache-key-x86_64-apple-darwin }}
      cache-key-aarch64-unknown-linux-gnu: ${{ steps.cache-key.outputs.cache-key-aarch64-unknown-linux-gnu }}
      cache-key-aarch64-unknown-linux-musl: ${{ steps.cache-key.outputs.cache-key-aarch64-unknown-linux-musl }}
      cache-key-riscv64gc-unknown-linux-gnu: ${{ steps.cache-key.outputs.cache-key-riscv64gc-unknown-linux-gnu }}
      cache-key-x86_64-unknown-linux-gnu: ${{ steps.cache-key.outputs.cache-key-x86_64-unknown-linux-gnu }}
      cache-key-x86_64-unknown-linux-musl: ${{ steps.cache-key.outputs.cache-key-x86_64-unknown-linux-musl }}
    steps:
      - uses: actions/checkout@v4

      - id: ls-remote
        run: |
          set -euxo pipefail
          value=$(git ls-remote https://github.com/aya-rs/llvm-project.git refs/heads/rustc/19.1-2024-09-17 | cut -f1)
          echo "sha=$value" >> "$GITHUB_OUTPUT"

      - id: cache-key
        run: echo "cache-key-${{ matrix.target }}=llvm-${{ matrix.target }}-${{ steps.ls-remote.outputs.sha }}-1" >> "$GITHUB_OUTPUT"

      - name: Cache
        id: cache-llvm
        uses: actions/cache@v4
        with:
          path: llvm-install
          key: ${{ steps.cache-key.outputs[format('cache-key-{0}', matrix.target)] }}
          lookup-only: true

      - name: Free disk space
        if: runner.os == 'Linux' && steps.cache-llvm.outputs.cache-hit != 'true'
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          swap-storage: false

      - name: Build container image
        if: steps.cache-llvm.outputs.cache-hit != 'true' && runner.os == 'Linux'
        run: |
          set -euxo pipefail
          cargo xtask build-container-image \
              --target "${{ matrix.target }}"

      - name: Build LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: |
          set -euxo pipefail
          cargo xtask build-llvm \
              --llvm-install-dir "${{ github.workspace }}/llvm-install" \
              --target "${{ matrix.target }}"
